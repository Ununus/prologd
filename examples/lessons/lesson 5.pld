% разделить А литров пополам, используя сосуды емкостью А, Б, В
вода(А,Б,В,а,а,0,Ф):-ВЫВОД(Ф),!.
вода(А,Б,В,а,б,в,Ф):-БОЛЬШЕ(а,0),МЕНЬШЕ(б,Б),долив(#а+б#,Б,г,д),НЕ(элемент([д,г,в],Ф)),вода(А,Б,В,д,г,в,[[д,г,в]
|Ф]).
вода(А,Б,В,а,б,в,Ф):-БОЛЬШЕ(а,0),МЕНЬШЕ(в,В),долив(#а+в#,В,г,д),НЕ(элемент([д,б,г],Ф)),вода(А,Б,В,д,б,г,[[д,б,г]
|Ф]).
вода(А,Б,В,а,б,в,Ф):-БОЛЬШЕ(б,0),МЕНЬШЕ(в,В),долив(#б+в#,В,г,д),НЕ(элемент([а,д,г],Ф)),вода(А,Б,В,а,д,г,[[а,д,г]
|Ф]).
вода(А,Б,В,а,б,в,Ф):-БОЛЬШЕ(б,0),МЕНЬШЕ(а,А),долив(#б+а#,А,г,д),НЕ(элемент([г,д,в],Ф)),вода(А,Б,В,г,д,в,[[г,д,в]
|Ф]).
вода(А,Б,В,а,б,в,Ф):-БОЛЬШЕ(в,0),МЕНЬШЕ(а,А),долив(#в+а#,А,г,д),НЕ(элемент([г,б,д],Ф)),вода(А,Б,В,г,б,д,[[г,б,д]
|Ф]).
вода(А,Б,В,а,б,в,Ф):-БОЛЬШЕ(в,0),МЕНЬШЕ(б,Б),долив(#в+б#,Б,г,д),НЕ(элемент([а,г,д],Ф)),вода(А,Б,В,а,г,д,[[а,г,д]
|Ф]).
долив(а,Б,Б,д):-БОЛЬШЕ(а,Б),!,СЛОЖЕНИЕ(Б,д,а).
долив(а,Б,а,0).
элемент(х,[х|_]).
элемент(х,[_|у]):- элемент(х,у).
перелив(А,Б,В):-вода(А,Б,В,А,0,0,[[А,0,0]]).
%?перелив(10,7,4).

перевоз([],на_правом',справа,история'):-решение([[[],на_правом',справа]|история']),!.
перевоз(на_левом',на_правом',слева,история'):-
              РАВНО([на_левом',на_правом',слева],запись'),НЕ(элемент(запись',история')),
              выделить(в_лодку',на_левом',ост_слева'),можно(ост_слева'),
              перевоз(ост_слева',[в_лодку'|на_правом'],справа,[запись'|история']).
перевоз(на_левом',на_правом',справа,история'):-можно(на_правом'),
              РАВНО([на_левом',на_правом',справа],запись'),НЕ(элемент(запись',история')),
              перевоз(на_левом',на_правом',слева,[запись'|история']).
перевоз(на_левом',на_правом',справа,история'):-
              РАВНО([на_левом',на_правом',справа],запись'),НЕ(элемент(запись',история')),
              выделить(в_лодку',на_правом',ост_справа'),можно(ост_справа'),
              перевоз([в_лодку'|на_левом'],ост_справа',слева,[запись'|история']).
выделить(a,[a|B],B).
выделить(a,[b|C],[b|D]):-выделить(a,C,D).
элемент(х,[х|_]).
элемент(х,[_|Y]):- элемент(х,Y).
присоединить([],A,A).
присоединить([x|A],B,[x|C]):-присоединить(A,B,C).
обращение([],[]).
обращение([a|B],X):- обращение(B,C),присоединить(C,[a],X).
решение(а):-обращение(а,б),печать(б).
печать([]).
печать([[а,б,в]|Г]):-ВЫВОД("Слева ",а,", Справа ",б,", Лодка - ",в),печать(Г).
можно([]).
можно([_]).
можно([волк,капуста]).
можно([капуста,волк]).

?перевоз([волк,коза,капуста],[],слева,[]).


% расставить n ферзей на доске nxn так, чтобы они не били друг друга
ферзь(0,n,[],A):-список(n,A),!.
ферзь(n,m,[[n,x]|A],C):-ферзь(#n-1#,#m+1#,A,B),выбрать(x,B,C),можно([n,x],A).
список(0,[]).
список(n,[n|A]):-список(#n-1#,A).
выбрать(x,[x|A],A).
выбрать(x,[y|A],[y|B]):-выбрать(x,A,B).
можно(_,[]):-!.
можно(a,[b|C]):-НЕ(нельзя(a,b)),можно(a,C).
нельзя([a,_],[a,_]):-!.
нельзя([_,a],[_,a]):-!.
нельзя([a,b],[c,d]):-abs(#a-c#,e),abs(#b-d#,f),РАВНО(e,f).
abs(x,y):-МЕНЬШЕ(x,0),!,РАВНО(y,#-1*x#).
abs(x,x).
ферзи(n,A):-ферзь(n,0,A,[]).
%?ферзи(8,A).

% задача о парламенте с враждующими депутатами
парламент(n,m,k):-список(n,N),сессия(N,m,[],k). 
список(0,[]). 
список(n,[n|L]):-БОЛЬШЕ(n,0),список(#n-1#,L). 
сессия(N,m,H,k):-заседание(N,m,M),можно(M,H),!,сессия(N,m,[M|H],k). 
сессия(_,_,H,k):-ВЫВОД(H),длина(H,k). 
заседание([a|D],c,[a|B]):-заседание(D,#c-1#,B). 
заседание([_|D],c,B):-заседание(D,c,B). 
заседание([],0,[]). 
можно(_,[]). 
можно(M,[A|B]):-НЕ(нельзя(M,[A|B])). 
нельзя(M,H):-пара(x,y,M),элемент(A,H),пара(x,y,A). 
пара(x,y,A):-элемент(x,A),элемент(y,A),НЕ(РАВНО(x,y)). 
элемент(х,[х|_]). 
элемент(х,[_|Y]):- элемент(х,Y). 
длина([],0). 
длина([a|B],d):-длина(B,c),СЛОЖЕНИЕ(c,1,d). 
%?парламент(7,4,c). 




