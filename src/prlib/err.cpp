#include "err.h"
#include "pdefs.h"
#include <stdio.h>

static const char *kErrorStrs[] = {
  "Ошибок не обнаружено",                                // 0
  "Недопустимый символ",                                 // 1
  "Недостаточно свободной памяти",                       // 2
  "Неверный формат строки",                              // 3
  "Неверный формат числа",                               // 4
  "Нет разделителя",                                     // 5
  "Отсутствует \"-\"",                                   // 6
  "Отсутствует \")\" или два \":-(<-)\"",                // 7
  "Неверное использование \":-(<-)\"",                   // 8
  "Список не может быть предикатом",                     // 9
  "Неверное использование \"?\"",                        // 10
  "Неверное использование \"_\"",                        // 11
  "Неверное использование \"!\"",                        // 12
  "Очень сложное предложение(переполнение)",             // 13
  "Непарные скобки при обработке списка",                // 14
  "Неправильный список",                                 // 15
  "Непарные скобки при обработке функции",               // 16
  "Перед \"(\" должен быть функтор",                     // 17 должен быть issymbol
  "Знак не в арифметическом выражении",                  // 18
  "Ошибка в написании арифметического выражения",        // 19
  "Ошибка при разборе предложения",                      // 20
  "Не могу открыть файл '*.OUT'",                        // 21
  "Не могу открыть графику",                             // 22
  "Слишком много символьных констант",                   // 23
  "Неизвестная ошибка",                                  // 24
  "Не реализованный предикат",                           // 25
  "Не верное число аргументов во встроенном предикате",  // 26
  "Исполнение прервано",                                 // 27
  "Переполнение стека",                                  // 28
  "В 'УМНОЖЕНИЕ' целочисленное деление веществ чисел",   // 29
  "Невыполнимое 'УМНОЖЕНИЕ'(неверные аргументы)",        // 30
  "Невыполнимый предикат 'СЛОЖЕНИЕ'",                    // 31
  "Ошибка в арифметическом выражении",                   // 32
  "Ошибка ввода/вывода",                                 // 33
  "Операция 'mod' применена к вещественному операнду",   // 34
  "Операция 'div' применена к вещественному операнду",   // 35
  "Ошибка во встроенном предикате 'int'",                // 36
  "Ошибка во встроенном предикате 'float'",              // 37
  "Ошибка при разборе функции",                          // 38
  "Недостаточно памяти для работы программы",            // 39
  "Переполнение стека при вычислении арифм. выражения",  // 40
  "Деление на 0 при вычислении арифм. выражения",        // 41
  "Переполнение буфера имен символьных констант",        // 42
  "Возникло исключение в процессе исполнения",           // 43
  "Слишком длинный список"                               // 44
};

const auto kErrorStrCount = sizeof(kErrorStrs) / sizeof(char *);

std::string GetPrErrText(ErrorCode err) {
  auto errIndex = to_underlying(err);
  if (errIndex >= kErrorStrCount) {
    return "Unknown error (" + std::to_string(errIndex) + ")";
  }
  return kErrorStrs[errIndex] + (" (" + std::to_string(errIndex) + ")");
}
